<!-- TODO: Optimize the shit out of this mess -->
<Window x:Class="OverParse.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:OverParse"
        xmlns:Properties="clr-namespace:OverParse.Properties"
        mc:Ignorable="d"
        WindowStyle="None" AllowsTransparency="True"
        Activated="Window_Activated" Deactivated="Window_Deactivated"
        ResizeMode="CanResizeWithGrip" StateChanged="Window_StateChanged"
        MouseDown="Window_MouseDown" Closing="Window_Closing"
        x:Name="TheWindow"
        Title="OverParse" Height="275" Width="670">

    <Window.Background>
        <SolidColorBrush x:Name="MainBack" Color="#FF0A0A0A" />
    </Window.Background>

    <Window.Resources>
        <Style TargetType="ListViewItem">
            <Setter Property="Height" Value="Auto"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="MinHeight" Value="18" />
            <Setter Property="Padding" Value="0,0,0,0"/>
            <Setter Property="Margin" Value="0,0,0,0"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderThickness" Value="0,0,0,0" />
            <EventSetter Event="MouseRightButtonUp" Handler="ListViewItem_MouseRightClick" />
            <Style.Triggers>
                <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                    <Setter Property="Background" Value="{Binding Brush}"/>
                </Trigger>
                <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                    <Setter Property="Background" Value="{Binding Brush2}"/>
                </Trigger>
            </Style.Triggers>
        </Style>


        <Style TargetType="ListView">
            <Setter Property="Background" Value="#FF0A0A0A"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Padding" Value="0,0,0,0"/>
            <Setter Property="Margin" Value="0,0,0,0"/>
            <Setter Property="FontFamily" Value="Noto Sans CJK JP DemiLight" />
        </Style>

        <Style TargetType="Menu">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Padding" Value="0,0,0,0"/>
            <Setter Property="Margin" Value="0,0,0,0"/>
        </Style>

        <Style TargetType="MenuItem" x:Key="topmenu">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="5,0,5,0"/>
            <Setter Property="Margin" Value="0,0,0,0"/>
        </Style>

        <Style x:Key="submenu" TargetType="MenuItem">
            <Setter Property="Foreground" Value="Black"/>
            <!--<Setter Property="BorderThickness" Value="0"/>-->
            <!--<Setter Property="Padding" Value="0,0,0,0"/>-->
        </Style>

        <Style TargetType="{x:Type TabItem}">
            <Setter Property="Foreground" Value="White" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TabItem">
                        <Grid Name="Panel">
                            <Border BorderBrush="Gray" BorderThickness="0,1,1,1" />
                            <ContentPresenter x:Name="ContentSite" VerticalAlignment="Center" HorizontalAlignment="Center" ContentSource="Header" Margin="0"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="Panel" Property="Background" Value="#008888" />
                            </Trigger>
                            <Trigger Property="IsSelected" Value="False">
                                <Setter TargetName="Panel" Property="Background" Value="Transparent" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
    </Window.Resources>

    <Border BorderBrush="#FF888888" BorderThickness="1">
        <Grid HorizontalAlignment="Stretch" Margin="0,0,0,0" VirtualizingPanel.IsVirtualizing="True" VirtualizingPanel.IsContainerVirtualizable="True" VirtualizingPanel.VirtualizationMode="Recycling">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Menu x:Name="MenuBar"  DockPanel.Dock="Top" HorizontalAlignment="Left" VerticalAlignment="Stretch" FontSize="12" ClipToBounds="True">
                <MenuItem Style="{StaticResource topmenu}" Header="Logging">
                    <MenuItem Style="{StaticResource submenu}" Header="End Encounter" x:Name="EndEncounter" InputGestureText="Ctrl+Shift+E" Click="EndEncounter_Click"/>
                    <MenuItem Style="{StaticResource submenu}" Header="Discard Encounter" x:Name="EndEncounterNoLog" InputGestureText="Ctrl+Shift+R" Click="EndEncounterNoLog_Click"/>
                    <Separator />
                    <MenuItem Style="{StaticResource submenu}" Header="Automatically End Encounters" x:Name="AutoEndEncounters" IsCheckable="True" IsChecked="False" Click="AutoEndEncounters_Click"/>
                    <MenuItem Style="{StaticResource submenu}" Header="Set Encounter Timeout..." x:Name="SetEncounterTimeout" Click="SetEncounterTimeout_Click"/>
                    <MenuItem Style="{StaticResource submenu}" Header="Automatically Copy to Clipboard" x:Name="LogToClipboard" IsCheckable="True" IsChecked="False" Click="LogToClipboard_Click"/>
                    <Separator />
                    <MenuItem Style="{StaticResource submenu}" Header="Open Logs Folder" Click="OpenLogsFolder_Click"/>
                    <MenuItem Style="{StaticResource submenu}" Header="Session Logs" x:Name="SessionLogs">
                        <MenuItem Style="{StaticResource submenu}" Header="No logs recorded in this session." x:Name="SessionLogPlaceholder" IsEnabled="False"/>
                    </MenuItem>
                </MenuItem>
                <MenuItem Style="{StaticResource topmenu}" Header="Parsing">
                    <MenuItem Style="{StaticResource submenu}" Header="Hide Enemies/NPCs" IsCheckable="True" IsChecked="True" x:Name="FilterPlayers" Click="FilterPlayers_Click"/>
                    <MenuItem Style="{StaticResource submenu}" Header="Damage Separation">
                        <MenuItem Style="{StaticResource submenu}" Header="Separate Zanverse" x:Name="SeparateZanverse" IsCheckable="True" IsChecked="False" Click="SeparateZanverse_Click"/>
                        <MenuItem Style="{StaticResource submenu}" Header="Separate Hero Time Finish" x:Name="SeparateFinish" IsCheckable="True" IsChecked="False" Click="SeparateFinish_Click"/>
                    </MenuItem>
                    <MenuItem Style="{StaticResource submenu}" Header="Attack Mode Separation">
                        <MenuItem Style="{StaticResource submenu}" Header="Separate A.I.S." x:Name="SeparateAIS" IsCheckable="True" IsChecked="False" Click="SeparateAIS_Click"/>
                        <MenuItem Style="{StaticResource submenu}" Header="Separate Dark Blast" x:Name="SeparateDB" IsCheckable="True" IsChecked="False" Click="SeparateDB_Click"/>
                        <MenuItem Style="{StaticResource submenu}" Header="Separate Rideroid" x:Name="SeparateRide" IsCheckable="True" IsChecked="False" Click="SeparateRide_Click" />
                        <MenuItem Style="{StaticResource submenu}" Header="Separate Photon Weapons" x:Name="SeparatePwp" IsCheckable="True" IsChecked="False" Click="SeparatePwp_Click" />
                        <MenuItem Style="{StaticResource submenu}" Header="Separate Laconium Sword" x:Name="SeparateLsw" IsCheckable="True" IsChecked="False" Click="SeparateLsw_Click" />
                        <Separator />
                        <MenuItem Style="{StaticResource submenu}" Header="Hide Players" x:Name="HidePlayers" IsCheckable="True" IsChecked="False" Click="HidePlayers_Click"/>
                        <MenuItem Style="{StaticResource submenu}" Header="Hide A.I.S." x:Name="HideAIS" IsCheckable="True" IsChecked="False" Click="HideAIS_Click"/>
                        <MenuItem Style="{StaticResource submenu}" Header="Hide Dark Blast" x:Name="HideDB" IsCheckable="True" IsChecked="False" Click="HideDB_Click"/>
                        <MenuItem Style="{StaticResource submenu}" Header="Hide Rideroid" x:Name="HideRide" IsCheckable="True" IsChecked="False" Click="HideRide_Click" />
                        <MenuItem Style="{StaticResource submenu}" Header="Hide Photon Weapons" x:Name="HidePwp" IsCheckable="True" IsChecked="False" Click="HidePwp_Click" />
                        <MenuItem Style="{StaticResource submenu}" Header="Hide Laconium Sword" x:Name="HideLsw" IsCheckable="True" IsChecked="False" Click="HideLsw_Click" />
                    </MenuItem>
                    <Separator />
                    <MenuItem Style="{StaticResource submenu}" Header="Anonymize Names" IsCheckable="True" IsChecked="False" x:Name="AnonymizeNames" Click="AnonymizeNames_Click"/>
                    <MenuItem Style="{StaticResource submenu}" Header="Hide All Other Players" IsCheckable="True" IsChecked="False" x:Name="Onlyme" Click="Onlyme_Click" />
                    <MenuItem Style="{StaticResource submenu}" Header="Change DPS Format" IsCheckable="True" IsChecked="False" x:Name="DPSFormat" Click="DPSFormat_Click" />
                    <MenuItem Style="{StaticResource submenu}" Header="Round JA/Crit Percents" IsCheckable="True" IsChecked="False" x:Name="Nodecimal" Click="Nodecimal_Click" />
                    <MenuItem Style="{StaticResource submenu}" Header="Change Data Update interval" Click="ChangeInterval_Click" />
                </MenuItem>
                <MenuItem Style="{StaticResource topmenu}" Header="Window">
                    <MenuItem Style="{StaticResource submenu}" Header="Reset Window Size" InputGestureText="Ctrl+Shift+D" Click="DefaultWindowSize_Click"/>
                    <MenuItem Style="{StaticResource submenu}" Header="Window Transparency">
                        <MenuItem Style="{StaticResource submenu}" x:Name="WinOpacity_0" Visibility="Collapsed" IsCheckable="True" IsChecked="False" Header="Transparent" Click="WindowOpacity_0_Click" />
                        <MenuItem Style="{StaticResource submenu}" x:Name="WinOpacity_25" IsCheckable="True" IsChecked="False" Header="25%" Click="WindowOpacity_25_Click" />
                        <MenuItem Style="{StaticResource submenu}" x:Name="Winopacity_50" IsCheckable="True" IsChecked="False" Header="50%" Click="WindowOpacity_50_Click" />
                        <MenuItem Style="{StaticResource submenu}" x:Name="WinOpacity_75" IsCheckable="True" IsChecked="True" Header="75%" Click="WindowOpacity_75_Click" />
                        <MenuItem Style="{StaticResource submenu}" x:Name="WinOpacity_100" IsCheckable="True" IsChecked="False" Header="100%" Click="WindowOpacity_100_Click" />
                    </MenuItem>
                    <MenuItem Style="{StaticResource submenu}" Header="Background Transparency">
                        <MenuItem Style="{StaticResource submenu}" x:Name="ListOpacity_0" Visibility="Collapsed" IsCheckable="True" IsChecked="False" Header="Transparent" Click="ListOpacity_0_Click" />
                        <MenuItem Style="{StaticResource submenu}" x:Name="ListOpacity_25" IsCheckable="True" IsChecked="False" Header="25%" Click="ListOpacity_25_Click" />
                        <MenuItem Style="{StaticResource submenu}" x:Name="Listopacity_50" IsCheckable="True" IsChecked="False" Header="50%" Click="ListOpacity_50_Click" />
                        <MenuItem Style="{StaticResource submenu}" x:Name="ListOpacity_75" IsCheckable="True" IsChecked="True" Header="75%" Click="ListOpacity_75_Click" />
                        <MenuItem Style="{StaticResource submenu}" x:Name="ListOpacity_100" IsCheckable="True" IsChecked="False" Header="100%" Click="ListOpacity_100_Click" />
                    </MenuItem>
                    <Separator />
                    <MenuItem Style="{StaticResource submenu}" IsCheckable="True" IsChecked="True" Header="Always on top" InputGestureText="Ctrl+Shift+A" x:Name="AlwaysOnTop" Click="AlwaysOnTop_Click"/>
                    <MenuItem Style="{StaticResource submenu}" IsCheckable="True" IsChecked="False" Header="Automatically Hide Window" x:Name="AutoHideWindow" Click="AutoHideWindow_Click"/>
                    <MenuItem Style="{StaticResource submenu}" IsCheckable="True" IsChecked="False" Header="Clickthrough Toggle" x:Name="ClickthroughMode" Click="ClickthroughToggle"/>
                </MenuItem>
                <MenuItem Style="{StaticResource topmenu}" Header="List">
                    <MenuItem Style="{StaticResource submenu}" Header="Select Columns..." Click="SelectColumn_Click" />
                    <MenuItem Style="{StaticResource submenu}" Header="Damage Graph" IsCheckable="True" IsChecked="False" x:Name="ShowDamageGraph" Click="ShowDamageGraph_Click"/>
                    <MenuItem Style="{StaticResource submenu}" Header="Highlight Own Damage" IsCheckable="True" IsChecked="True" x:Name="HighlightYourDamage" Click="HighlightYourDamage_Click"/>
                </MenuItem>
                <MenuItem Style="{StaticResource topmenu}" Header="Other">
                    <MenuItem Style="{StaticResource submenu}" Header="About" x:Name="About" Click="About_Click"/>
                    <Separator />
                    <MenuItem Header="Low Priority Mode" Click="LowResources_Click" x:Name="LowResources" IsCheckable="True" IsChecked="False" Style="{StaticResource submenu}" />
                    <MenuItem Header="Disable GPU Rendering" Click="CPUdraw_Click" x:Name="CPUdraw" IsCheckable="True" IsChecked="False" Style="{StaticResource submenu}" />
                    <MenuItem Header="Show Updated Time(Debug)" Click="Clock_Click" x:Name="Clock" IsCheckable="True" IsChecked="False" Style="{StaticResource submenu}" />
                    <Separator />
                    <MenuItem Header="Join Discord" Click="Discord_Click" Style="{StaticResource submenu}" />
                    <MenuItem Header="Open github" Click="Github_Click" Style="{StaticResource submenu}" />
                    <Separator />
                    <MenuItem Style="{StaticResource submenu}" Header="Skip DLL Update" x:Name="Skipdll" Click="SkipPlugin_Click" />
                    <MenuItem Style="{StaticResource submenu}" Header="Reselect pso2bin..." x:Name="ResetLogFolder" Click="ResetLogFolder_Click"/>
                    <MenuItem Style="{StaticResource submenu}" Header="Force Plugin Update..." x:Name="PluginUpdate" Click="UpdatePlugin_Click"/>
                    <MenuItem Style="{StaticResource submenu}" Header="Reset OverParse..." x:Name="Reset" Click="ResetOverParse"/>
                </MenuItem>
            </Menu>
            <Label x:Name="Datetime" Foreground="#FFFFFFFF" Padding="0" Margin="230,0,0,0" FontSize="12" VerticalAlignment="Top" HorizontalAlignment="Left"/>

            <Menu HorizontalAlignment="Right" VerticalAlignment="Stretch" FontSize="12">
                <MenuItem Header="____" Click="Minimize_Click" Style="{StaticResource topmenu}" />
                <MenuItem Style="{StaticResource topmenu}" Header="Exit" Click="Exit_Click"/>
            </Menu>

                    <ListView x:Name="CombatantData" AlternationCount="2" HorizontalAlignment="Stretch" Grid.Row="1" VerticalAlignment="Stretch" ScrollViewer.HorizontalScrollBarVisibility="Hidden" ScrollViewer.VerticalScrollBarVisibility="Hidden" BorderThickness="0" FontSize="11" ClipToBounds="True" Margin="-2,0,0,0">
                        <ListView.Background>
                            <SolidColorBrush Opacity="0"/>
                        </ListView.Background>

                        <ListView.View>
                            <GridView x:Name="CombatantView">
                                <GridView.ColumnHeaderContainerStyle>
                            <Style TargetType="{x:Type GridViewColumnHeader}">
                                <Setter Property="Background" Value="Transparent" />
                                <Setter Property="Foreground" Value="#FFFFFFFF" />
                                <Setter Property="Padding" Value="0"/>
                                <Setter Property="IsHitTestVisible" Value="False" />
                            </Style>
                        </GridView.ColumnHeaderContainerStyle>

                                <GridViewColumn Header="Name" x:Name="NameColumn" Width="{Binding ElementName=NameH, Path=ActualWidth}">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding DisplayName}" TextAlignment="Left" Margin="-3,-1,-5,-1" Padding="0" />
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>

                                <GridViewColumn Header="%" x:Name="PercentColumn" Width="{Binding ElementName=PercentH, Path=ActualWidth}">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding PercentReadDPSReadout}" TextAlignment="Right" Margin="-5,-1,-5,-1" Padding="0" />
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>

                                <GridViewColumn Header="Damage" x:Name="DamageColumn" Width="{Binding ElementName=DmgH, Path=ActualWidth}">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding DamageReadout}" TextAlignment="Right" Margin="-5,-1,-5,-1" Padding="0" />
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>

                                <GridViewColumn Header="Taken" x:Name="DamagedColumn" Width="{Binding ElementName=DmgdH, Path=ActualWidth}">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding ReadDamaged}" TextAlignment="Right" Margin="-5,-1,-5,-1" Padding="0" />
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>

                                <GridViewColumn Header="DPS" x:Name="DPSColumn" Width="{Binding ElementName=DPSH, Path=ActualWidth}">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding FDPSReadout}" TextAlignment="Right" Margin="-5,-1,-5,-1" Padding="0" />
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>

                                <GridViewColumn Header="JA %" x:Name="JAColumn" Width="{Binding ElementName=JAH, Path=ActualWidth}">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding JAPercent}" TextAlignment="Right" Margin="-5,-1,-5,-1" Padding="0" />
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>

                                <GridViewColumn Header="Crit %" x:Name="CriColumn" Width="{Binding ElementName=CriH, Path=ActualWidth}">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding CRIPercent}" TextAlignment="Right" Margin="-5,-1,-5,-1" Padding="0" />
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>

                                <GridViewColumn Header="Max Hit" x:Name="HColumn" Width="{Binding ElementName=MdmgH, Path=ActualWidth}">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding MaxHitdmg}" TextAlignment="Right" Margin="-5,-1,-5,-1" Padding="0" />
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>

                                <GridViewColumn Header="Attack Name" x:Name="MaxHitColumn" Width="{Binding ElementName=AtkH, Path=ActualWidth}">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding MaxHit}" TextAlignment="Center" Margin="-5,-1,-5,-1" Padding="0" />
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>

                            </GridView>
                        </ListView.View>
                    </ListView>

            <Grid Visibility="Hidden" Grid.Row="1" Margin="0" Grid.RowSpan="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition x:Name="NameHC" Width="1*"/>
                    <ColumnDefinition x:Name="PercentHC" Width="39"/>
                    <ColumnDefinition x:Name="DmgHC" Width="78"/>
                    <ColumnDefinition x:Name="DmgDHC" Width="56" />
                    <ColumnDefinition x:Name="DPSHC" Width="56"/>
                    <ColumnDefinition x:Name="JAHC" Width="39"/>
                    <ColumnDefinition x:Name="CriHC" Width="39"/>
                    <ColumnDefinition x:Name="MdmgHC" Width="62"/>
                    <ColumnDefinition x:Name="AtkHC" Width="1.7*"/>
                </Grid.ColumnDefinitions>
                <Grid Grid.Column="0" x:Name="NameH" />
                <Grid Grid.Column="1" x:Name="PercentH" />
                <Grid Grid.Column="2" x:Name="DmgH" />
                <Grid Grid.Column="3" x:Name="DmgdH" />
                <Grid Grid.Column="4" x:Name="DPSH" />
                <Grid Grid.Column="5" x:Name="JAH" />
                <Grid Grid.Column="6" x:Name="CriH" />
                <Grid Grid.Column="7" x:Name="MdmgH" />
                <Grid Grid.Column="8" x:Name="AtkH" />
            </Grid>

            <Rectangle x:Name="EncounterIndicator" Grid.Row="2" Height="2" VerticalAlignment="Top"  Fill="White" IsHitTestVisible="False" />
            <Label x:Name="EncounterStatus" Grid.Row="2" Foreground="White" Padding="2,0,0,0" FontSize="12" FontFamily="Noto Sans CJK JP DemiLight" IsHitTestVisible="False" />
        </Grid>
    </Border>
</Window>
    
